/*
 * DSS - Digital Signature Services
 *
 * Copyright (C) 2011 European Commission, Directorate-General Internal Market and Services (DG MARKT), B-1049 Bruxelles/Brussel
 *
 * Developed by: 2011 ARHS Developments S.A. (rue Nicolas Bov√© 2B, L-1253 Luxembourg) http://www.arhs-developments.com
 *
 * This file is part of the "DSS - Digital Signature Services" project.
 *
 * "DSS - Digital Signature Services" is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Lesser General Public License as published by the Free Software Foundation, either version 2.1 of the
 * License, or (at your option) any later version.
 *
 * DSS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with
 * "DSS - Digital Signature Services".  If not, see <http://www.gnu.org/licenses/>.
 */

package eu.europa.ec.markt.tlmanager.view.panel;

import java.util.ResourceBundle;

import javax.swing.*;

import eu.europa.ec.markt.tlmanager.core.Configuration;
import eu.europa.ec.markt.tlmanager.util.Util;

/**
 * A small panel for holding the values for a <tsl:PostalAddress>
 * 
 *
 * @version $Revision: 2660 $ - $Date: 2013-09-26 16:03:53 +0200 (jeu., 26 sept. 2013) $
 */

public class PostalPanel extends javax.swing.JPanel {
    private static final ResourceBundle uiKeys = ResourceBundle.getBundle(
            "eu/europa/ec/markt/tlmanager/uiKeysComponents", Configuration.getInstance().getLocale());

    private PostalModel model;
    private DefaultComboBoxModel countryNamesModel;

    /**
     * Instantiates a new postal panel.
     */
    public PostalPanel() {
        String[] entries = Util.addNoSelectionEntry(Configuration.getInstance().getCountryCodes().getCodes());
        countryNamesModel = new DefaultComboBoxModel(entries);
        model = new PostalModel();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        streetAddress = new javax.swing.JTextField();
        streetAddressLabel = new javax.swing.JLabel();
        locality = new javax.swing.JTextField();
        localityLabel = new javax.swing.JLabel();
        stateOrProvince = new javax.swing.JTextField();
        stateOrProvinceLabel = new javax.swing.JLabel();
        postalCode = new javax.swing.JTextField();
        postalCodeLabel = new javax.swing.JLabel();
        countryName = new javax.swing.JComboBox();
        countryNameLabel = new javax.swing.JLabel();

        streetAddress.setName("street"); // NOI18N

        streetAddressLabel.setForeground(new java.awt.Color(255, 0, 0));
        streetAddressLabel.setText(uiKeys.getString("PostalPanel.streetAddress")); // NOI18N

        locality.setName("locality"); // NOI18N

        localityLabel.setForeground(new java.awt.Color(255, 0, 0));
        localityLabel.setText(uiKeys.getString("PostalPanel.locality")); // NOI18N

        stateOrProvinceLabel.setText(uiKeys.getString("PostalPanel.stateOrProvince")); // NOI18N

        postalCodeLabel.setText(uiKeys.getString("PostalPanel.postalCode")); // NOI18N

        countryName.setEditable(!Configuration.getInstance().isEuMode());
        countryName.setModel(countryNamesModel);
        countryName.setName("country"); // NOI18N

        countryNameLabel.setForeground(new java.awt.Color(255, 0, 0));
        countryNameLabel.setText(uiKeys.getString("PostalPanel.countryName")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(streetAddressLabel)
                    .addComponent(localityLabel)
                    .addComponent(stateOrProvinceLabel)
                    .addComponent(postalCodeLabel)
                    .addComponent(countryNameLabel))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(countryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locality, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addComponent(streetAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addComponent(stateOrProvince, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addComponent(postalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetAddressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(localityLabel)
                    .addComponent(locality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(stateOrProvinceLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stateOrProvince, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(postalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postalCodeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryNameLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox countryName;
    private javax.swing.JLabel countryNameLabel;
    private javax.swing.JTextField locality;
    private javax.swing.JLabel localityLabel;
    private javax.swing.JTextField postalCode;
    private javax.swing.JLabel postalCodeLabel;
    private javax.swing.JTextField stateOrProvince;
    private javax.swing.JLabel stateOrProvinceLabel;
    private javax.swing.JTextField streetAddress;
    private javax.swing.JLabel streetAddressLabel;
    // End of variables declaration//GEN-END:variables

    private void resetValuesFromModel() {
        streetAddress.setText(model.getStreetAddress());
        locality.setText(model.getLocality());
        postalCode.setText(model.getPostalCode());
        stateOrProvince.setText(model.getStateOrProvince());
        countryName.setSelectedItem(model.getCountryName());
    }

    private void resetModelFromValues() {
        model.setStreetAddress(streetAddress.getText());
        model.setLocality(locality.getText());
        model.setPostalCode(postalCode.getText());
        model.setStateOrProvince(stateOrProvince.getText());
        model.setCountryName((String) countryName.getSelectedItem());
    }

    /**
     * Empties all values in the model and resets ui components.
     */
    public void clearModel() {
        this.model.clear();
        resetValuesFromModel();
    }

    /**
     * Resets the component values to the one in the model.
     * 
     * @param model the updated model
     */
    public void updateCurrentValues(PostalModel model) {
        this.model = model;
        resetValuesFromModel();
    }

    /**
     * Resets the current values in the model and returns it.
     * 
     * @return the most current model
     */
    public PostalModel retrieveCurrentValues() {
        resetModelFromValues();
        return new PostalModel(model);
    }
}